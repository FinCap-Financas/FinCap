// <auto-generated />
using System;
using FinCap.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinCap.Data.Migrations
{
    [DbContext(typeof(FinCapDbContext))]
    partial class FinCapDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinCap.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnUpdate()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deletado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("Publica")
                        .HasColumnType("bit");

                    b.Property<Guid>("UidUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("UidUsuario");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Conta", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnUpdate()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deletado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("SaldoInicial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<Guid>("UidUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("UidUsuario");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Transacao", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnUpdate()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("Modo")
                        .HasColumnType("int");

                    b.Property<Guid>("UidCategoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UidConta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Uid");

                    b.HasIndex("UidCategoria");

                    b.HasIndex("UidConta");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnUpdate()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DataNascimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<bool>("Deletado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FotoPerfil")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Uid");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Categoria", b =>
                {
                    b.HasOne("FinCap.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Categorias")
                        .HasForeignKey("UidUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Conta", b =>
                {
                    b.HasOne("FinCap.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Contas")
                        .HasForeignKey("UidUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Transacao", b =>
                {
                    b.HasOne("FinCap.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Transacoes")
                        .HasForeignKey("UidCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinCap.Domain.Entities.Conta", "Conta")
                        .WithMany("Transacoes")
                        .HasForeignKey("UidConta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Conta", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("FinCap.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Contas");
                });
#pragma warning restore 612, 618
        }
    }
}
